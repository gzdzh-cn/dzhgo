server:
  address:     ":8200"
  openapiPath: "/api.json"
  swaggerPath: "/swagger"
  serverRoot: "resource/public"
  clientMaxBodySize: 104857600  # 100MB in bytes 100*1024*1024
  paths: ["template", "/var/www/template"]
  defaultFile: "index.html"
  delimiters: ["{{", "}}"]

logger:
  path: "./data/logs/"
  file: "{Y-m-d}.log"
  level : "all"
  stdout: true,


database:
  logger:
    path: "./data/logs/sql"
    level: "all"
    stdout: true

  default:
    type: "mysql"
    host: "127.0.0.1"
    port: "3306"
    user: "root"
    pass: "dzh123456"
    name: "dzhgo_go"
    charset: "utf8mb4"
    timezone: "Asia/Shanghai"
    createdAt: "createTime"
    updatedAt: "updateTime"
    deletedAt: "deleteTime" 
    debug: true #开启调试模式,启用后将在控制台打印相关sql语句
  # default:
  #   type: "sqlite" # 数据库类型
  #   name: "./data/cool.sqlite" # 数据库名称,对于sqlite来说就是数据库文件名
  #   extra: busy_timeout=5000 # 扩展参数 如 busy_timeout=5000&journal_mode=ALL
  #   createdAt: "createTime" # 创建时间字段名称
  #   updatedAt: "updateTime" # 更新时间字段名称
  #   debug: true # 开启调试模式,启用后将在控制台打印相关sql语句


# Redis 配置示例
redis:
  core:
    address: "127.0.0.1:6379"
    db: 0
    
core:
  autoMigrate: true
  eps: true
  file:
    #oss local
    mode: "local"
    domain: "/dzhimg"
    # oss配置项兼容 minio oss 需要配置bucket公开读
    oss:
      endpoint: ""
      accessKeyID: ""
      secretAccessKey: ""
      bucketName: ""
      useSSL: false #minio用到
      location: "us-east-1" #minio用到

modules:
  base:
    jwt:
      sso: false
      secret: "dzhgo"
      token:
        expire: 604800 # 24 * 3600 * 7
        refreshExpire: 1296000 # 24*3600*15
    middleware:
      authority:
        enable: 1
      log:
        enable: 1
    # 客户端请求代理
    http:
      proxy_open: false  # 代理开关
      proxy_url: ""  # 代理地址

    img:
      cdn_url: ""
